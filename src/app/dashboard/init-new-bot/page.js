"use client";

import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import CopyToClipboard from "@/app/lib/CopyToClipboard";
import BackButton from "@/app/components/ui/BackButton";

export default function InitNewBot() {
  const [activeStep, setActiveStep] = useState(4);
  //   const [botToken, setBotToken] = useState("");

  //   const [copied, setCopied] = useState(false);
  //   const [bot, setBot] = useState(null);
  //   const [loading, setLoading] = useState(false);
  //   const [isWrongToken, setIsWrongToken] = useState(false);

  //   function clearInputStatus() {
  //     setIsWrongToken(false);
  //   }

  //   async function nextStep(step) {
  //     if (activeStep === 1 && botToken === "") return false;

  //     if (botToken !== "") {
  //       setLoading(true);

  //       const botData = await CompanyService.getBotInfo(botToken);

  //       // console.log(botData);

  //       if (!botData) {
  //         setIsWrongToken(true);
  //         setLoading(false);
  //         return;
  //       }

  //       const session = await AuthService.getSession();

  //       if (!session.userId) redirect("/login");

  //       const newBot = await CompanyService.saveNewBot(session.userId, botToken);

  //       console.log(newBot);

  //       if (newBot) {
  //         setBot(newBot);
  //         setActiveStep(step);
  //         setBotToken("");
  //         setLoading(false);
  //       }
  //     } else {
  //       setActiveStep(step);
  //       setCopied(false);
  //     }
  //   }

  // useEffect(() => {
  //   session
  // }, [])

  return (
    <div className="ms-container py-10">
      <BackButton url={"/dashboard"} label={"–ù–∞–∑–∞–¥"} />
      <div className="">
        <div className="text-xl font-semibold mt-6 text-center">
          –ü—Ä–æ–π–¥—ñ—Ç—å –≤—Å—å–æ–≥–æ 3 –∫—Ä–æ–∫–∏ —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –≤–ª–∞—Å–Ω–∏–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –∑ –í–∞—à–∏–º
          –≥—Ä–∞—Ñ—ñ–∫–æ–º —Ä–æ–±–æ—Ç–∏
        </div>
        <div className="flex items-center mt-10">
          <div
            className={`step ${
              activeStep === 1
                ? "stepActive"
                : activeStep > 1
                ? "stepFinished"
                : ""
            }`}
          >
            <span>1</span>
          </div>
          <div
            className={`stepSeparator ${
              activeStep > 1 ? "stepSeparatorFinished" : ""
            }`}
          >
            <div></div>
          </div>
          <div
            className={`step ${
              activeStep === 2
                ? "stepActive"
                : activeStep > 2
                ? "stepFinished"
                : ""
            }`}
          >
            <span>2</span>
          </div>
          <div
            className={`stepSeparator ${
              activeStep > 2 ? "stepSeparatorFinished" : ""
            }`}
          >
            <div></div>
          </div>
          <div
            className={`step ${
              activeStep === 3
                ? "stepActive"
                : activeStep > 3
                ? "stepFinished"
                : ""
            }`}
          >
            <span>3</span>
          </div>
          <div
            className={`stepSeparator ${
              activeStep > 3 ? "stepSeparatorFinished" : ""
            }`}
          >
            <div></div>
          </div>
          <div className={`step ${activeStep === 4 ? "stepActive" : ""}`}>
            <span>üéâ</span>
          </div>
        </div>

        <div className="my-6 text-xl font-semibold">–ö—Ä–æ–∫ {activeStep}</div>

        {/* step 1 */}

        {activeStep === 1 && (
          <div>
            <div>
              <p className="my-1 font-light text-gray-500">
                1. –ó–∞–π–¥—ñ—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º —Ç–∞ –∑–Ω–∞–π–¥—ñ—Ç—å –≤ –ø–æ—à—É–∫—É
                <a
                  target="_blunk"
                  href="https://t.me/botfather"
                  className="text-mainBlue font-bold underline mx-1"
                >
                  @BotFather
                </a>
                (–∞–±–æ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ —Ü–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º)
              </p>
              <div className="shadow-md my-4">
                <Image
                  src={"/init-1-steps/init-step-1.png"}
                  width={609}
                  height={144}
                  className="m-auto"
                  alt=""
                />
              </div>
            </div>

            <div>
              <p className="my-1 font-light text-gray-500">
                2. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –±–æ—Ç, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥—É{" "}
                <span className="text-black font-bold">/newbot</span>
              </p>
              <div className="my-4">
                <div className="shadow-md">
                  <Image
                    src={"/init-1-steps/init-step-2.png"}
                    width={609}
                    height={144}
                    className="m-auto"
                    alt=""
                  />
                </div>
                <p className="text-center font-bold my-3">–∞–±–æ</p>
                <div className="shadow-md">
                  <Image
                    src={"/init-1-steps/init-step-22.png"}
                    width={609}
                    height={144}
                    className="m-auto"
                    alt=""
                  />
                </div>
              </div>
            </div>

            <div>
              <p className="my-1 font-light text-gray-500">
                3. –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∞–∑–≤—É –¥–ª—è —Å–≤–æ–≥–æ –±–æ—Ç–∞ <br />
              </p>
              <div className="my-4 shadow-md">
                <Image
                  src={"/init-1-steps/init-step-3.png"}
                  width={609}
                  height={144}
                  className="m-auto"
                  alt=""
                />
              </div>
            </div>

            <div>
              <p className="my-1 font-light text-gray-500">
                4. –ü—Ä–∏–¥—É–º–∞–π—Ç–µ{" "}
                <span className="text-black font-bold">username</span> (–º–∞—î
                –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–ª–æ–≤–æ–º{" "}
                <span className="text-black font-bold">‚Äòbot‚Äô</span>) <br />
              </p>
              <div className="my-4 shadow-md">
                <Image
                  src={"/init-1-steps/init-step-4.png"}
                  width={609}
                  height={144}
                  className="m-auto"
                  alt=""
                />
              </div>
            </div>

            <div>
              <p className="font-light text-gray-500">
                5. –°–∫–æ–ø—ñ—é–π—Ç–µ –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –∫–ª—é—á (–≤–∏–¥—ñ–ª–µ–Ω–∏–π —á–µ—Ä–≤–æ–Ω–∏–º) –≤ –ø–æ–ª–µ,
                —è–∫–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∏–∂—á–µ
              </p>
              <div className="my-4 shadow-md">
                <Image
                  src={"/init-1-steps/init-step-5.png"}
                  width={609}
                  height={144}
                  className="m-auto"
                  alt=""
                />
              </div>
            </div>

            <div className="w-full mt-8">
              <label htmlFor="token" className="input-label !font-bold">
                –í–≤–µ–¥—ñ—Ç—å –í–∞—à —Ç–æ–∫–µ–Ω
              </label>
              <input
                type="text"
                id="token"
                className="input"
                placeholder="–í–≤–µ–¥—ñ—Ç—å —Ç—É—Ç..."
                //   onChange={(event) => setBotToken(event.target.value)}
                //   onKeyUp={() => clearInputStatus()}
              />
            </div>
          </div>
        )}

        {/* step 2 */}
        {activeStep === 2 && (
          <div>
            <p className="my-6 font-light text-left text-gray-500">
              –ê–±–∏ –ø—ñ–¥—î–¥–Ω–∞—Ç–∏ –±–æ—Ç –¥–æ –Ω–∞—à–æ—ó –ø–∞–Ω–µ–ª—ñ, —Å–∫–æ–ø—ñ—é–π—Ç–µ –í–∞—à–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ
              –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Ç–∞ –≤–∏–∫–æ–Ω–∞–π—Ç–µ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é –Ω–∏–∂—á–µ
            </p>

            <p className="text-ellipsis overflow-hidden bg-slate-200 p-2 rounded text-center">
              {process.env.NEXT_PUBLIC_APP_URL}/panel/{""}
            </p>
            <div className="flex justify-center mt-3 mb-4">
              <CopyToClipboard
                text={`${process.env.NEXT_PUBLIC_APP_URL}/panel/${""}`}
              />
            </div>

            <p className="mt-4 font-light text-left text-gray-500">
              1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ
              <a
                target="_blunk"
                href="https://t.me/botfather"
                className="text-mainBlueDark font-bold underline mx-1"
              >
                @BotFather
              </a>
              —Ç–∞ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –ø–æ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –∫—Ä–æ–∫–∞—Ö: <br />
              <span className="font-bold">/mybots</span> {`>`}{" "}
              <span className="font-bold">
                {`"`}–ù–∞–∑–≤–∞ –í–∞—à–æ–≥–æ –±–æ—Ç–∞{`"`}
              </span>{" "}
              {` > `} <span className="font-bold">Bot Settings</span>
              {` > `} <span className="font-bold">Configure Mini App</span>{" "}
              {` > `}
              <span className="font-bold">Enable Mini App</span>
            </p>
            <p className="my-1 font-light text-left text-gray-500">
              2. –í—Å—Ç–∞–≤—Ç–µ –≤ –ø–æ–ª–µ –í–∞—à–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ
            </p>
          </div>
        )}

        {/* step 3 */}
        {activeStep === 3 && (
          <div>
            <p className="mt-6 text-left font-bold ">
              –î–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ –í–∞—à–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤, –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ –º–µ–Ω—é —É –í–∞—à–æ–º—É –±–æ—Ç—ñ
            </p>
            <p className="mt-1 mb-6 font-light text-left text-gray-500">
              –î–ª—è —Ü—å–æ–≥–æ —Å–∫–æ–ø—ñ—é–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Ç–∞ –≤–∏–∫–æ–Ω–∞–π—Ç–µ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é –Ω–∏–∂—á–µ
            </p>

            <p className="text-ellipsis overflow-hidden bg-slate-200 p-2 rounded text-center">
              {process.env.NEXT_PUBLIC_APP_URL}/panel/{""}
            </p>
            <div className="flex justify-center mt-3 mb-4">
              <CopyToClipboard
                text={`${process.env.NEXT_PUBLIC_APP_URL}/panel/${""}`}
              />
            </div>

            <p className="mt-4 font-light text-left text-gray-500">
              1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ
              <a
                target="_blunk"
                href="https://t.me/botfather"
                className="text-mainBlueDark font-bold underline mx-1"
              >
                @BotFather
              </a>
              —Ç–∞ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –ø–æ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –∫—Ä–æ–∫–∞—Ö: <br />
              <span className="font-bold">/mybots</span> {`>`}{" "}
              <span className="font-bold">
                {`"`}–ù–∞–∑–≤–∞ –í–∞—à–æ–≥–æ –±–æ—Ç–∞{`"`}
              </span>{" "}
              {` > `} <span className="font-bold">Bot Settings</span>
              {` > `} <span className="font-bold">Menu Button</span> {` > `}
              <span className="font-bold">Configure menu button</span>
            </p>
            <p className="my-1 font-light text-left text-gray-500">
              2. –í—Å—Ç–∞–≤—Ç–µ –≤ –ø–æ–ª–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ
            </p>
            <p className="my-1 font-light text-left text-gray-500">
              3. –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É, —è–∫–∞ –±—É–¥–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏—Å—è –Ω–∞ –∫–Ω–æ–ø—Ü—ñ. –ù–∞–ø—Ä–∏–∫–ª–∞–¥:{" "}
              <span className="font-bold">
                {`"`}–í—ñ–¥–∫—Ä–∏—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫{`"`}
              </span>
            </p>
          </div>
        )}

        {activeStep === 4 && (
          <div>
            <p className="my-1 font-bold">–í—ñ—Ç–∞—î–º–æ! –í–∞—à –±–æ—Ç –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ!</p>
            <p className="my-1 font-light text-gray-500">
              –ü–µ—Ä–µ—Ö–æ–¥—å—Ç–µ –≤ –ø–∞–Ω–µ–ª—å —Ç–∞ –∑–∞–ø–æ–≤–Ω—é–π—Ç–µ —Å–≤—ñ–π —Ä–æ–±–æ—á–∏–π –≥—Ä–∞—Ñ—ñ–∫
            </p>
          </div>
        )}

        <div className="flex justify-center mt-10">
          {activeStep > 1 && (
            <div className={`mx-1`}>
              <button
                className={`button gray `}
                onClick={() => nextStep(activeStep - 1)}
              >
                –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è
              </button>
            </div>
          )}

          {activeStep < 4 && (
            <div className="mx-1">
              <button
                className={`button`}
                onClick={() => nextStep(activeStep + 1)}
              >
                –î–∞–ª—ñ
              </button>
            </div>
          )}

          {activeStep === 4 && (
            <Link href={`/dashboard/${""}`} className={`button`}>
              –†–æ–∑–ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É
            </Link>
          )}
        </div>
      </div>
    </div>
  );
}
